name: Publish Fabric and Forge Releases

on:
  push:
    branches:
      - main

jobs:
  publish_releases:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check commit message
      id: check_commit_message
      run: echo ::set-output name=commit_starts_with_version::$(echo "${{ github.event.head_commit.message }}" | grep -c '^version')

    - name: Build with Gradle
      if: steps.check_commit_message.outputs.commit_starts_with_version == '1'
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Get project version
      if: steps.check_commit_message.outputs.commit_starts_with_version == '1'
      id: get_version
      run: echo ::set-output name=version::$(grep -oP 'mod.version:\s+\K(.+)' ./gradlew.properties)

    - name: Create Fabric release
      if: steps.check_commit_message.outputs.commit_starts_with_version == '1'
      id: create_fabric_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: "fabric-latest"
        release_name: "Fabric"
        body: |
          Release for Fabric version ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Create Forge release
      if: steps.check_commit_message.outputs.commit_starts_with_version == '1'
      id: create_forge_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: "forge-latest"
        release_name: "Forge"
        body: |
          Release for Forge version ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
